package com.powernode.crm.workbench.mapper;

import com.powernode.crm.workbench.domain.Clue;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Fri Apr 14 17:48:50 GMT+08:00 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Fri Apr 14 17:48:50 GMT+08:00 2023
     */
    int insert(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Fri Apr 14 17:48:50 GMT+08:00 2023
     */
    int insertSelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Fri Apr 14 17:48:50 GMT+08:00 2023
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Fri Apr 14 17:48:50 GMT+08:00 2023
     */
    int updateByPrimaryKeySelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Fri Apr 14 17:48:50 GMT+08:00 2023
     */
    int updateByPrimaryKey(Clue record);

    /**
     * 保存创建的线索
     * @param clue
     * @return
     */
    int insertClue(Clue clue);

    /**
     * 根据id查询线索的明细信息
     * @param id
     * @return
     */
    Clue selectClueForDetailById(String id);

    //根据ID查询线索信息，把该线索中有关公司信息转换到客户表中
    //把该线索中有关个人的信息转换到联系人表中
    //根据线索id查询所有线索下的备注，把该线索所有的备注转换到客户备注表中
    //根据线索id查询所有线索下的备注，把该线索所有的备注转换到联系人备注表中
    //根据clueId查询该线索和市场活动的关联关系，把该线索和市场活动的关联关系转换到联系人和市场活动的关联关系表中
    //如果需要创建交易，向交易表中添加一条记录
    //如果需要创建交易，把该线索的所有备注转换到交易备注表中一份
    //删除该线索下所有备注
    //删除该线索和市场活动的关联关系
    //删除该线索

    /**
     * 根据id查询线索的信息
     * @param id
     * @return
     */
    Clue selectClueById(String id);

    /**
     * 根据id删除线索
     * @param id
     * @return
     */
    int deleteClueById(String id);

}